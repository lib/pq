on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.15.x, 1.16.x]
        postgres-version: ['9.6', '10', '11', '12']
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Create database and users
      run: |
        createdb -U postgres pqgotest
        createuser -DRS pqgossltest
        createuser -DRS pqgosslcert
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test with binary parameters
      run: PQTEST_BINARY_PARAMETERS=true go test ./...
    - name: Test without binary parameters
      run: PQTEST_BINARY_PARAMETERS=false go test ./...
  golangci:
    strategy:
      matrix:
        go-version: [1.16.x]
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
